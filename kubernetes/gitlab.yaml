---
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  labels:
    app: gitlab
spec:
  ports:
    - name: gitlab-ui
      port: 80
      protocol: TCP
      targetPort: 30080
      nodePort: 30080
    - name: gitlab-ssh
      port: 22
      protocol: TCP
      targetPort: 22
      nodePort: 30022
  selector:
    app: gitlab
    tier: frontend
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-claim
  labels:
    app: gitlab
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gitlab
  labels:
    app: gitlab
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gitlab
        tier: frontend
    spec:
      containers:
        - image: gitlab/gitlab-ce:9.1.0-ce.0
          name: gitlab
          env:
            - name: GITLAB_OMNIBUS_CONFIG
              value: |
                postgresql['enable'] = false
                gitlab_rails['db_username'] = "gitlab"
                gitlab_rails['db_password'] = "gitlab"
                gitlab_rails['db_host'] = "postgresql"
                gitlab_rails['db_port'] = "5432"
                gitlab_rails['db_database'] = "gitlabhq_production"
                gitlab_rails['db_adapter'] = 'postgresql'
                gitlab_rails['db_encoding'] = 'utf8'
                redis['enable'] = false
                gitlab_rails['redis_host'] = 'redis'
                gitlab_rails['redis_port'] = '6379'
                gitlab_rails['gitlab_shell_ssh_port'] = 30022
                external_url 'http://gitlab.example.com:30080'
          ports:
            - containerPort: 30080
              name: gitlab
          volumeMounts:
            - name: gitlab
              mountPath: /home/git/data:rw
      volumes:
        - name: gitlab
          persistentVolumeClaim:
            claimName: gitlab-claim
---
apiVersion: batch/v1
kind: Job
metadata: {name: kubernetes-containter-service-gitlab-sample-metrics}
spec:
  template:
    metadata: {name: kubernetes-container-service-gitlab-sample-metrics}
    spec:
      containers:
        - env:
            - {name: config, value: '{"event_id": "web",
                "repository_id": "Kubernetes-container-service-Gitlab-sample",
                "target_services": ["Compose for PostgreSQL"],
                "target_runtimes": ["Kubernetes Cluster"],
                "event_organizer": "dev-journeys"}'}
            - {name: language, value: ''}
          image: journeycode/kubernetes:latest
          name: kubernetes-container-service-gitlab-sample-metrics
          resources:
            limits: {cpu: 100m}
      restartPolicy: Never
